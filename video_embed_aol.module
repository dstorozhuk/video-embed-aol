<?php

/**
 * @file AMI Aol on video module file.
 */

module_load_include('inc', 'video_embed_aol', 'video_embed_aol.video_embed_field');

/**
 * This constant provides AOL ON single video api endpoint.
 */
define('VIDEO_EMBED_AOL_API_SINGLE_VIDEO_ENDPOINT', 'http://api.5min.com/video');

/**
 * Custom function to get video data from aol network.
 *
 * @param $video_id
 *   video unique identifier.
 *
 * @param $sid
 *   ami aol network identifier
 *
 * @return mixed
 */
function _get_aol_video_info($video_id, $settings = array()){

  $cached = &drupal_static(__FUNCTION__ . $video_id, '');
  if (!empty($cached)) {
    return $cached;
  }
  $url = VIDEO_EMBED_AOL_API_SINGLE_VIDEO_ENDPOINT . '/' . $video_id . '/info.json';
  $query = array();
  foreach ($settings as $name => $value) {
    if ($value <= 1 && is_numeric($value) ) {
      $query[$name] = var_export((bool) $value, TRUE);
    }
    else {
      $query[$name] = $value;
    }
  }
  $query_path = url($url, array('query' => $query));
  $result = drupal_http_request($query_path, array('timeout' => '2'));
  if ($result->code == '200') {
    $data = drupal_json_decode($result->data);
    if (isset($data['api-info'])) {
      $cached = $item_info = reset($data['items']);
      return $item_info ;
    }
    return FALSE;
  }
  return FALSE;
}

/**
 * Helper function to retrieve data from AOL ON for a given video URL.
 * @param $url
 * The video page url.
 * @return mixed
 */
function _video_embed_aol_extract_aol_video_data_from_url($url, $settings = array()) {
  $parsed = @parse_url($url);
  if ($parsed) {
    if (isset($parsed['path'])) {
      $exploded_path = explode('-', $parsed['path']);
      $posible_video_id = end($exploded_path);
      if (is_numeric($posible_video_id)) {
        $video_info = _get_aol_video_info($posible_video_id, $settings);
        return $video_info;
      }
    }
  }
  return FALSE;
}
